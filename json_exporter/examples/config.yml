---
modules:
  default:
    metrics:
    - name: pvSystemId
      type: object
      path: '{ .pvSystemId }'
      help: Id system
      labels:
        id: "pvSystemId"
        name: "pvSystemId"
      values:
        pvSystemId: '{.pvSystemId}'

    - name: data
      type: object
      path: '{ .data.channels }'
      help: channels value
      labels:
        id: "data"
        name: "data"
      values:
        channelName: '{.channelName}'
        channelType: '{.channelType}'
        unit: '{.unit}'
        values: '{.values.total}'

    # If 'body' is set, it will be sent by the exporter as the body content in the scrape request. The HTTP method will also be set as 'POST' in this case.
    # body:
    #   content: |
    #     {"time_diff": "1m25s", "anotherVar": "some value"}

    # The body content can also be a Go Template (https://golang.org/pkg/text/template), with all the functions from the Sprig library (https://masterminds.github.io/sprig/) available. All the query parameters sent by prometheus in the scrape query to the exporter, are available in the template.
    # body:
    #   content: |
    #     {"time_diff": "{{ duration `95` }}","anotherVar": "{{ .myVal | first }}"}
    #   templatize: true

    # For full http client config parameters, ref: https://pkg.go.dev/github.com/prometheus/common/config?tab=doc#HTTPClientConfig
    #
    http_client_config:
       tls_config:
         insecure_skip_verify: true
       basic_auth:
         AccessKeyId: FKIA3DF560810CBE4BDFAD4DF85A279659C3
         AccessKeyValue: 0c1358c4-9a16-4a2f-8952-a4b8b96c68d6
      # password_file: /tmp/mysecret.txt

    # Accepted status codes for this probe. Defaults to 2xx.
    # valid_status_codes: [ <int>, ... | default = 2xx ]